//calculate
const calculateMax = (coll) => {
  if (coll.length === 0) {
    return null;
  }

  let max = coll[0];
  for (let i = 1; i < coll.length; i += 1) {
    const currentElement = coll[i];
    if (currentElement > max) {
      max = currentElement;
    }
  }
  
  return max;
};

console.log(calculateMax([]));
console.log(calculateMax([3, 2, -10, 38, 0]));

/*
Если массив пустой, то возвращаем null. Это классический пример использования идиомы guard expression (охраняющее выражение). Её идея в том, что в начале функции проверяются самые простые условия, для которых нужно минимум вычислений. При таком подходе основной код находится на верхнем уровне, а не размещён внутри условной конструкции. Такой код легче читать и у него меньше вложенность. Иначе основную логику пришлось вкладывать в условную конструкцию:

В ином случае (основная логика) берём за точку отсчёта первый элемент массива и считаем его максимальным.

Обходим массив, начиная со второго элемента, и сравниваем каждое значение с максимальным. Если текущий рассматриваемый элемент больше максимального, то он становится максимальным.

После обхода (перебора всех элементов массива) возвращаем результат.
*/